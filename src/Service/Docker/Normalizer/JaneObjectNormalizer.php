<?php

namespace App\Service\Docker\Normalizer;

use App\Service\Docker\Runtime\Normalizer\CheckArray;
use App\Service\Docker\Runtime\Normalizer\ValidatorTrait;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\DenormalizerInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\NormalizerInterface;

class JaneObjectNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
{
    use DenormalizerAwareTrait;
    use NormalizerAwareTrait;
    use CheckArray;
    use ValidatorTrait;
    protected $normalizers = ['App\\Service\\Docker\\Model\\Port' => 'App\\Service\\Docker\\Normalizer\\PortNormalizer', 'App\\Service\\Docker\\Model\\MountPoint' => 'App\\Service\\Docker\\Normalizer\\MountPointNormalizer', 'App\\Service\\Docker\\Model\\DeviceMapping' => 'App\\Service\\Docker\\Normalizer\\DeviceMappingNormalizer', 'App\\Service\\Docker\\Model\\DeviceRequest' => 'App\\Service\\Docker\\Normalizer\\DeviceRequestNormalizer', 'App\\Service\\Docker\\Model\\ThrottleDevice' => 'App\\Service\\Docker\\Normalizer\\ThrottleDeviceNormalizer', 'App\\Service\\Docker\\Model\\Mount' => 'App\\Service\\Docker\\Normalizer\\MountNormalizer', 'App\\Service\\Docker\\Model\\MountBindOptions' => 'App\\Service\\Docker\\Normalizer\\MountBindOptionsNormalizer', 'App\\Service\\Docker\\Model\\MountVolumeOptions' => 'App\\Service\\Docker\\Normalizer\\MountVolumeOptionsNormalizer', 'App\\Service\\Docker\\Model\\MountVolumeOptionsDriverConfig' => 'App\\Service\\Docker\\Normalizer\\MountVolumeOptionsDriverConfigNormalizer', 'App\\Service\\Docker\\Model\\MountTmpfsOptions' => 'App\\Service\\Docker\\Normalizer\\MountTmpfsOptionsNormalizer', 'App\\Service\\Docker\\Model\\RestartPolicy' => 'App\\Service\\Docker\\Normalizer\\RestartPolicyNormalizer', 'App\\Service\\Docker\\Model\\Resources' => 'App\\Service\\Docker\\Normalizer\\ResourcesNormalizer', 'App\\Service\\Docker\\Model\\ResourcesBlkioWeightDeviceItem' => 'App\\Service\\Docker\\Normalizer\\ResourcesBlkioWeightDeviceItemNormalizer', 'App\\Service\\Docker\\Model\\ResourcesUlimitsItem' => 'App\\Service\\Docker\\Normalizer\\ResourcesUlimitsItemNormalizer', 'App\\Service\\Docker\\Model\\Limit' => 'App\\Service\\Docker\\Normalizer\\LimitNormalizer', 'App\\Service\\Docker\\Model\\ResourceObject' => 'App\\Service\\Docker\\Normalizer\\ResourceObjectNormalizer', 'App\\Service\\Docker\\Model\\GenericResourcesItem' => 'App\\Service\\Docker\\Normalizer\\GenericResourcesItemNormalizer', 'App\\Service\\Docker\\Model\\GenericResourcesItemNamedResourceSpec' => 'App\\Service\\Docker\\Normalizer\\GenericResourcesItemNamedResourceSpecNormalizer', 'App\\Service\\Docker\\Model\\GenericResourcesItemDiscreteResourceSpec' => 'App\\Service\\Docker\\Normalizer\\GenericResourcesItemDiscreteResourceSpecNormalizer', 'App\\Service\\Docker\\Model\\HealthConfig' => 'App\\Service\\Docker\\Normalizer\\HealthConfigNormalizer', 'App\\Service\\Docker\\Model\\Health' => 'App\\Service\\Docker\\Normalizer\\HealthNormalizer', 'App\\Service\\Docker\\Model\\HealthcheckResult' => 'App\\Service\\Docker\\Normalizer\\HealthcheckResultNormalizer', 'App\\Service\\Docker\\Model\\HostConfig' => 'App\\Service\\Docker\\Normalizer\\HostConfigNormalizer', 'App\\Service\\Docker\\Model\\HostConfigLogConfig' => 'App\\Service\\Docker\\Normalizer\\HostConfigLogConfigNormalizer', 'App\\Service\\Docker\\Model\\ContainerConfig' => 'App\\Service\\Docker\\Normalizer\\ContainerConfigNormalizer', 'App\\Service\\Docker\\Model\\NetworkingConfig' => 'App\\Service\\Docker\\Normalizer\\NetworkingConfigNormalizer', 'App\\Service\\Docker\\Model\\NetworkSettings' => 'App\\Service\\Docker\\Normalizer\\NetworkSettingsNormalizer', 'App\\Service\\Docker\\Model\\Address' => 'App\\Service\\Docker\\Normalizer\\AddressNormalizer', 'App\\Service\\Docker\\Model\\PortBinding' => 'App\\Service\\Docker\\Normalizer\\PortBindingNormalizer', 'App\\Service\\Docker\\Model\\GraphDriverData' => 'App\\Service\\Docker\\Normalizer\\GraphDriverDataNormalizer', 'App\\Service\\Docker\\Model\\FilesystemChange' => 'App\\Service\\Docker\\Normalizer\\FilesystemChangeNormalizer', 'App\\Service\\Docker\\Model\\ImageInspect' => 'App\\Service\\Docker\\Normalizer\\ImageInspectNormalizer', 'App\\Service\\Docker\\Model\\ImageInspectRootFS' => 'App\\Service\\Docker\\Normalizer\\ImageInspectRootFSNormalizer', 'App\\Service\\Docker\\Model\\ImageInspectMetadata' => 'App\\Service\\Docker\\Normalizer\\ImageInspectMetadataNormalizer', 'App\\Service\\Docker\\Model\\ImageSummary' => 'App\\Service\\Docker\\Normalizer\\ImageSummaryNormalizer', 'App\\Service\\Docker\\Model\\AuthConfig' => 'App\\Service\\Docker\\Normalizer\\AuthConfigNormalizer', 'App\\Service\\Docker\\Model\\ProcessConfig' => 'App\\Service\\Docker\\Normalizer\\ProcessConfigNormalizer', 'App\\Service\\Docker\\Model\\Volume' => 'App\\Service\\Docker\\Normalizer\\VolumeNormalizer', 'App\\Service\\Docker\\Model\\VolumeUsageData' => 'App\\Service\\Docker\\Normalizer\\VolumeUsageDataNormalizer', 'App\\Service\\Docker\\Model\\VolumeCreateOptions' => 'App\\Service\\Docker\\Normalizer\\VolumeCreateOptionsNormalizer', 'App\\Service\\Docker\\Model\\VolumeListResponse' => 'App\\Service\\Docker\\Normalizer\\VolumeListResponseNormalizer', 'App\\Service\\Docker\\Model\\Network' => 'App\\Service\\Docker\\Normalizer\\NetworkNormalizer', 'App\\Service\\Docker\\Model\\IPAM' => 'App\\Service\\Docker\\Normalizer\\IPAMNormalizer', 'App\\Service\\Docker\\Model\\IPAMConfig' => 'App\\Service\\Docker\\Normalizer\\IPAMConfigNormalizer', 'App\\Service\\Docker\\Model\\NetworkContainer' => 'App\\Service\\Docker\\Normalizer\\NetworkContainerNormalizer', 'App\\Service\\Docker\\Model\\BuildInfo' => 'App\\Service\\Docker\\Normalizer\\BuildInfoNormalizer', 'App\\Service\\Docker\\Model\\BuildCache' => 'App\\Service\\Docker\\Normalizer\\BuildCacheNormalizer', 'App\\Service\\Docker\\Model\\ImageID' => 'App\\Service\\Docker\\Normalizer\\ImageIDNormalizer', 'App\\Service\\Docker\\Model\\CreateImageInfo' => 'App\\Service\\Docker\\Normalizer\\CreateImageInfoNormalizer', 'App\\Service\\Docker\\Model\\PushImageInfo' => 'App\\Service\\Docker\\Normalizer\\PushImageInfoNormalizer', 'App\\Service\\Docker\\Model\\ErrorDetail' => 'App\\Service\\Docker\\Normalizer\\ErrorDetailNormalizer', 'App\\Service\\Docker\\Model\\ProgressDetail' => 'App\\Service\\Docker\\Normalizer\\ProgressDetailNormalizer', 'App\\Service\\Docker\\Model\\ErrorResponse' => 'App\\Service\\Docker\\Normalizer\\ErrorResponseNormalizer', 'App\\Service\\Docker\\Model\\IdResponse' => 'App\\Service\\Docker\\Normalizer\\IdResponseNormalizer', 'App\\Service\\Docker\\Model\\EndpointSettings' => 'App\\Service\\Docker\\Normalizer\\EndpointSettingsNormalizer', 'App\\Service\\Docker\\Model\\EndpointIPAMConfig' => 'App\\Service\\Docker\\Normalizer\\EndpointIPAMConfigNormalizer', 'App\\Service\\Docker\\Model\\PluginMount' => 'App\\Service\\Docker\\Normalizer\\PluginMountNormalizer', 'App\\Service\\Docker\\Model\\PluginDevice' => 'App\\Service\\Docker\\Normalizer\\PluginDeviceNormalizer', 'App\\Service\\Docker\\Model\\PluginEnv' => 'App\\Service\\Docker\\Normalizer\\PluginEnvNormalizer', 'App\\Service\\Docker\\Model\\PluginInterfaceType' => 'App\\Service\\Docker\\Normalizer\\PluginInterfaceTypeNormalizer', 'App\\Service\\Docker\\Model\\PluginPrivilege' => 'App\\Service\\Docker\\Normalizer\\PluginPrivilegeNormalizer', 'App\\Service\\Docker\\Model\\Plugin' => 'App\\Service\\Docker\\Normalizer\\PluginNormalizer', 'App\\Service\\Docker\\Model\\PluginSettings' => 'App\\Service\\Docker\\Normalizer\\PluginSettingsNormalizer', 'App\\Service\\Docker\\Model\\PluginConfig' => 'App\\Service\\Docker\\Normalizer\\PluginConfigNormalizer', 'App\\Service\\Docker\\Model\\PluginConfigInterface' => 'App\\Service\\Docker\\Normalizer\\PluginConfigInterfaceNormalizer', 'App\\Service\\Docker\\Model\\PluginConfigUser' => 'App\\Service\\Docker\\Normalizer\\PluginConfigUserNormalizer', 'App\\Service\\Docker\\Model\\PluginConfigNetwork' => 'App\\Service\\Docker\\Normalizer\\PluginConfigNetworkNormalizer', 'App\\Service\\Docker\\Model\\PluginConfigLinux' => 'App\\Service\\Docker\\Normalizer\\PluginConfigLinuxNormalizer', 'App\\Service\\Docker\\Model\\PluginConfigArgs' => 'App\\Service\\Docker\\Normalizer\\PluginConfigArgsNormalizer', 'App\\Service\\Docker\\Model\\PluginConfigRootfs' => 'App\\Service\\Docker\\Normalizer\\PluginConfigRootfsNormalizer', 'App\\Service\\Docker\\Model\\ObjectVersion' => 'App\\Service\\Docker\\Normalizer\\ObjectVersionNormalizer', 'App\\Service\\Docker\\Model\\NodeSpec' => 'App\\Service\\Docker\\Normalizer\\NodeSpecNormalizer', 'App\\Service\\Docker\\Model\\Node' => 'App\\Service\\Docker\\Normalizer\\NodeNormalizer', 'App\\Service\\Docker\\Model\\NodeDescription' => 'App\\Service\\Docker\\Normalizer\\NodeDescriptionNormalizer', 'App\\Service\\Docker\\Model\\Platform' => 'App\\Service\\Docker\\Normalizer\\PlatformNormalizer', 'App\\Service\\Docker\\Model\\EngineDescription' => 'App\\Service\\Docker\\Normalizer\\EngineDescriptionNormalizer', 'App\\Service\\Docker\\Model\\EngineDescriptionPluginsItem' => 'App\\Service\\Docker\\Normalizer\\EngineDescriptionPluginsItemNormalizer', 'App\\Service\\Docker\\Model\\TLSInfo' => 'App\\Service\\Docker\\Normalizer\\TLSInfoNormalizer', 'App\\Service\\Docker\\Model\\NodeStatus' => 'App\\Service\\Docker\\Normalizer\\NodeStatusNormalizer', 'App\\Service\\Docker\\Model\\ManagerStatus' => 'App\\Service\\Docker\\Normalizer\\ManagerStatusNormalizer', 'App\\Service\\Docker\\Model\\SwarmSpec' => 'App\\Service\\Docker\\Normalizer\\SwarmSpecNormalizer', 'App\\Service\\Docker\\Model\\SwarmSpecOrchestration' => 'App\\Service\\Docker\\Normalizer\\SwarmSpecOrchestrationNormalizer', 'App\\Service\\Docker\\Model\\SwarmSpecRaft' => 'App\\Service\\Docker\\Normalizer\\SwarmSpecRaftNormalizer', 'App\\Service\\Docker\\Model\\SwarmSpecDispatcher' => 'App\\Service\\Docker\\Normalizer\\SwarmSpecDispatcherNormalizer', 'App\\Service\\Docker\\Model\\SwarmSpecCAConfig' => 'App\\Service\\Docker\\Normalizer\\SwarmSpecCAConfigNormalizer', 'App\\Service\\Docker\\Model\\SwarmSpecCAConfigExternalCAsItem' => 'App\\Service\\Docker\\Normalizer\\SwarmSpecCAConfigExternalCAsItemNormalizer', 'App\\Service\\Docker\\Model\\SwarmSpecEncryptionConfig' => 'App\\Service\\Docker\\Normalizer\\SwarmSpecEncryptionConfigNormalizer', 'App\\Service\\Docker\\Model\\SwarmSpecTaskDefaults' => 'App\\Service\\Docker\\Normalizer\\SwarmSpecTaskDefaultsNormalizer', 'App\\Service\\Docker\\Model\\SwarmSpecTaskDefaultsLogDriver' => 'App\\Service\\Docker\\Normalizer\\SwarmSpecTaskDefaultsLogDriverNormalizer', 'App\\Service\\Docker\\Model\\ClusterInfo' => 'App\\Service\\Docker\\Normalizer\\ClusterInfoNormalizer', 'App\\Service\\Docker\\Model\\JoinTokens' => 'App\\Service\\Docker\\Normalizer\\JoinTokensNormalizer', 'App\\Service\\Docker\\Model\\Swarm' => 'App\\Service\\Docker\\Normalizer\\SwarmNormalizer', 'App\\Service\\Docker\\Model\\TaskSpec' => 'App\\Service\\Docker\\Normalizer\\TaskSpecNormalizer', 'App\\Service\\Docker\\Model\\TaskSpecPluginSpec' => 'App\\Service\\Docker\\Normalizer\\TaskSpecPluginSpecNormalizer', 'App\\Service\\Docker\\Model\\TaskSpecContainerSpec' => 'App\\Service\\Docker\\Normalizer\\TaskSpecContainerSpecNormalizer', 'App\\Service\\Docker\\Model\\TaskSpecContainerSpecPrivileges' => 'App\\Service\\Docker\\Normalizer\\TaskSpecContainerSpecPrivilegesNormalizer', 'App\\Service\\Docker\\Model\\TaskSpecContainerSpecPrivilegesCredentialSpec' => 'App\\Service\\Docker\\Normalizer\\TaskSpecContainerSpecPrivilegesCredentialSpecNormalizer', 'App\\Service\\Docker\\Model\\TaskSpecContainerSpecPrivilegesSELinuxContext' => 'App\\Service\\Docker\\Normalizer\\TaskSpecContainerSpecPrivilegesSELinuxContextNormalizer', 'App\\Service\\Docker\\Model\\TaskSpecContainerSpecDNSConfig' => 'App\\Service\\Docker\\Normalizer\\TaskSpecContainerSpecDNSConfigNormalizer', 'App\\Service\\Docker\\Model\\TaskSpecContainerSpecSecretsItem' => 'App\\Service\\Docker\\Normalizer\\TaskSpecContainerSpecSecretsItemNormalizer', 'App\\Service\\Docker\\Model\\TaskSpecContainerSpecSecretsItemFile' => 'App\\Service\\Docker\\Normalizer\\TaskSpecContainerSpecSecretsItemFileNormalizer', 'App\\Service\\Docker\\Model\\TaskSpecContainerSpecConfigsItem' => 'App\\Service\\Docker\\Normalizer\\TaskSpecContainerSpecConfigsItemNormalizer', 'App\\Service\\Docker\\Model\\TaskSpecContainerSpecConfigsItemFile' => 'App\\Service\\Docker\\Normalizer\\TaskSpecContainerSpecConfigsItemFileNormalizer', 'App\\Service\\Docker\\Model\\TaskSpecContainerSpecUlimitsItem' => 'App\\Service\\Docker\\Normalizer\\TaskSpecContainerSpecUlimitsItemNormalizer', 'App\\Service\\Docker\\Model\\TaskSpecNetworkAttachmentSpec' => 'App\\Service\\Docker\\Normalizer\\TaskSpecNetworkAttachmentSpecNormalizer', 'App\\Service\\Docker\\Model\\TaskSpecResources' => 'App\\Service\\Docker\\Normalizer\\TaskSpecResourcesNormalizer', 'App\\Service\\Docker\\Model\\TaskSpecRestartPolicy' => 'App\\Service\\Docker\\Normalizer\\TaskSpecRestartPolicyNormalizer', 'App\\Service\\Docker\\Model\\TaskSpecPlacement' => 'App\\Service\\Docker\\Normalizer\\TaskSpecPlacementNormalizer', 'App\\Service\\Docker\\Model\\TaskSpecPlacementPreferencesItem' => 'App\\Service\\Docker\\Normalizer\\TaskSpecPlacementPreferencesItemNormalizer', 'App\\Service\\Docker\\Model\\TaskSpecPlacementPreferencesItemSpread' => 'App\\Service\\Docker\\Normalizer\\TaskSpecPlacementPreferencesItemSpreadNormalizer', 'App\\Service\\Docker\\Model\\TaskSpecLogDriver' => 'App\\Service\\Docker\\Normalizer\\TaskSpecLogDriverNormalizer', 'App\\Service\\Docker\\Model\\Task' => 'App\\Service\\Docker\\Normalizer\\TaskNormalizer', 'App\\Service\\Docker\\Model\\TaskStatus' => 'App\\Service\\Docker\\Normalizer\\TaskStatusNormalizer', 'App\\Service\\Docker\\Model\\TaskStatusContainerStatus' => 'App\\Service\\Docker\\Normalizer\\TaskStatusContainerStatusNormalizer', 'App\\Service\\Docker\\Model\\ServiceSpec' => 'App\\Service\\Docker\\Normalizer\\ServiceSpecNormalizer', 'App\\Service\\Docker\\Model\\ServiceSpecMode' => 'App\\Service\\Docker\\Normalizer\\ServiceSpecModeNormalizer', 'App\\Service\\Docker\\Model\\ServiceSpecModeReplicated' => 'App\\Service\\Docker\\Normalizer\\ServiceSpecModeReplicatedNormalizer', 'App\\Service\\Docker\\Model\\ServiceSpecModeReplicatedJob' => 'App\\Service\\Docker\\Normalizer\\ServiceSpecModeReplicatedJobNormalizer', 'App\\Service\\Docker\\Model\\ServiceSpecUpdateConfig' => 'App\\Service\\Docker\\Normalizer\\ServiceSpecUpdateConfigNormalizer', 'App\\Service\\Docker\\Model\\ServiceSpecRollbackConfig' => 'App\\Service\\Docker\\Normalizer\\ServiceSpecRollbackConfigNormalizer', 'App\\Service\\Docker\\Model\\EndpointPortConfig' => 'App\\Service\\Docker\\Normalizer\\EndpointPortConfigNormalizer', 'App\\Service\\Docker\\Model\\EndpointSpec' => 'App\\Service\\Docker\\Normalizer\\EndpointSpecNormalizer', 'App\\Service\\Docker\\Model\\Service' => 'App\\Service\\Docker\\Normalizer\\ServiceNormalizer', 'App\\Service\\Docker\\Model\\ServiceEndpoint' => 'App\\Service\\Docker\\Normalizer\\ServiceEndpointNormalizer', 'App\\Service\\Docker\\Model\\ServiceEndpointVirtualIPsItem' => 'App\\Service\\Docker\\Normalizer\\ServiceEndpointVirtualIPsItemNormalizer', 'App\\Service\\Docker\\Model\\ServiceUpdateStatus' => 'App\\Service\\Docker\\Normalizer\\ServiceUpdateStatusNormalizer', 'App\\Service\\Docker\\Model\\ServiceServiceStatus' => 'App\\Service\\Docker\\Normalizer\\ServiceServiceStatusNormalizer', 'App\\Service\\Docker\\Model\\ServiceJobStatus' => 'App\\Service\\Docker\\Normalizer\\ServiceJobStatusNormalizer', 'App\\Service\\Docker\\Model\\ImageDeleteResponseItem' => 'App\\Service\\Docker\\Normalizer\\ImageDeleteResponseItemNormalizer', 'App\\Service\\Docker\\Model\\ServiceUpdateResponse' => 'App\\Service\\Docker\\Normalizer\\ServiceUpdateResponseNormalizer', 'App\\Service\\Docker\\Model\\ContainerSummary' => 'App\\Service\\Docker\\Normalizer\\ContainerSummaryNormalizer', 'App\\Service\\Docker\\Model\\ContainerSummaryHostConfig' => 'App\\Service\\Docker\\Normalizer\\ContainerSummaryHostConfigNormalizer', 'App\\Service\\Docker\\Model\\ContainerSummaryNetworkSettings' => 'App\\Service\\Docker\\Normalizer\\ContainerSummaryNetworkSettingsNormalizer', 'App\\Service\\Docker\\Model\\Driver' => 'App\\Service\\Docker\\Normalizer\\DriverNormalizer', 'App\\Service\\Docker\\Model\\SecretSpec' => 'App\\Service\\Docker\\Normalizer\\SecretSpecNormalizer', 'App\\Service\\Docker\\Model\\Secret' => 'App\\Service\\Docker\\Normalizer\\SecretNormalizer', 'App\\Service\\Docker\\Model\\ConfigSpec' => 'App\\Service\\Docker\\Normalizer\\ConfigSpecNormalizer', 'App\\Service\\Docker\\Model\\Config' => 'App\\Service\\Docker\\Normalizer\\ConfigNormalizer', 'App\\Service\\Docker\\Model\\ContainerState' => 'App\\Service\\Docker\\Normalizer\\ContainerStateNormalizer', 'App\\Service\\Docker\\Model\\ContainerCreateResponse' => 'App\\Service\\Docker\\Normalizer\\ContainerCreateResponseNormalizer', 'App\\Service\\Docker\\Model\\ContainerWaitResponse' => 'App\\Service\\Docker\\Normalizer\\ContainerWaitResponseNormalizer', 'App\\Service\\Docker\\Model\\ContainerWaitExitError' => 'App\\Service\\Docker\\Normalizer\\ContainerWaitExitErrorNormalizer', 'App\\Service\\Docker\\Model\\SystemVersion' => 'App\\Service\\Docker\\Normalizer\\SystemVersionNormalizer', 'App\\Service\\Docker\\Model\\SystemVersionPlatform' => 'App\\Service\\Docker\\Normalizer\\SystemVersionPlatformNormalizer', 'App\\Service\\Docker\\Model\\SystemVersionComponentsItem' => 'App\\Service\\Docker\\Normalizer\\SystemVersionComponentsItemNormalizer', 'App\\Service\\Docker\\Model\\SystemInfo' => 'App\\Service\\Docker\\Normalizer\\SystemInfoNormalizer', 'App\\Service\\Docker\\Model\\SystemInfoDefaultAddressPoolsItem' => 'App\\Service\\Docker\\Normalizer\\SystemInfoDefaultAddressPoolsItemNormalizer', 'App\\Service\\Docker\\Model\\PluginsInfo' => 'App\\Service\\Docker\\Normalizer\\PluginsInfoNormalizer', 'App\\Service\\Docker\\Model\\RegistryServiceConfig' => 'App\\Service\\Docker\\Normalizer\\RegistryServiceConfigNormalizer', 'App\\Service\\Docker\\Model\\IndexInfo' => 'App\\Service\\Docker\\Normalizer\\IndexInfoNormalizer', 'App\\Service\\Docker\\Model\\Runtime' => 'App\\Service\\Docker\\Normalizer\\RuntimeNormalizer', 'App\\Service\\Docker\\Model\\Commit' => 'App\\Service\\Docker\\Normalizer\\CommitNormalizer', 'App\\Service\\Docker\\Model\\SwarmInfo' => 'App\\Service\\Docker\\Normalizer\\SwarmInfoNormalizer', 'App\\Service\\Docker\\Model\\PeerNode' => 'App\\Service\\Docker\\Normalizer\\PeerNodeNormalizer', 'App\\Service\\Docker\\Model\\NetworkAttachmentConfig' => 'App\\Service\\Docker\\Normalizer\\NetworkAttachmentConfigNormalizer', 'App\\Service\\Docker\\Model\\EventActor' => 'App\\Service\\Docker\\Normalizer\\EventActorNormalizer', 'App\\Service\\Docker\\Model\\EventMessage' => 'App\\Service\\Docker\\Normalizer\\EventMessageNormalizer', 'App\\Service\\Docker\\Model\\OCIDescriptor' => 'App\\Service\\Docker\\Normalizer\\OCIDescriptorNormalizer', 'App\\Service\\Docker\\Model\\OCIPlatform' => 'App\\Service\\Docker\\Normalizer\\OCIPlatformNormalizer', 'App\\Service\\Docker\\Model\\DistributionInspect' => 'App\\Service\\Docker\\Normalizer\\DistributionInspectNormalizer', 'App\\Service\\Docker\\Model\\ClusterVolume' => 'App\\Service\\Docker\\Normalizer\\ClusterVolumeNormalizer', 'App\\Service\\Docker\\Model\\ClusterVolumeInfo' => 'App\\Service\\Docker\\Normalizer\\ClusterVolumeInfoNormalizer', 'App\\Service\\Docker\\Model\\ClusterVolumePublishStatusItem' => 'App\\Service\\Docker\\Normalizer\\ClusterVolumePublishStatusItemNormalizer', 'App\\Service\\Docker\\Model\\ClusterVolumeSpec' => 'App\\Service\\Docker\\Normalizer\\ClusterVolumeSpecNormalizer', 'App\\Service\\Docker\\Model\\ClusterVolumeSpecAccessMode' => 'App\\Service\\Docker\\Normalizer\\ClusterVolumeSpecAccessModeNormalizer', 'App\\Service\\Docker\\Model\\ClusterVolumeSpecAccessModeSecretsItem' => 'App\\Service\\Docker\\Normalizer\\ClusterVolumeSpecAccessModeSecretsItemNormalizer', 'App\\Service\\Docker\\Model\\ClusterVolumeSpecAccessModeAccessibilityRequirements' => 'App\\Service\\Docker\\Normalizer\\ClusterVolumeSpecAccessModeAccessibilityRequirementsNormalizer', 'App\\Service\\Docker\\Model\\ClusterVolumeSpecAccessModeCapacityRange' => 'App\\Service\\Docker\\Normalizer\\ClusterVolumeSpecAccessModeCapacityRangeNormalizer', 'App\\Service\\Docker\\Model\\ContainersCreatePostBody' => 'App\\Service\\Docker\\Normalizer\\ContainersCreatePostBodyNormalizer', 'App\\Service\\Docker\\Model\\ContainersIdJsonGetResponse200' => 'App\\Service\\Docker\\Normalizer\\ContainersIdJsonGetResponse200Normalizer', 'App\\Service\\Docker\\Model\\ContainersIdTopGetResponse200' => 'App\\Service\\Docker\\Normalizer\\ContainersIdTopGetResponse200Normalizer', 'App\\Service\\Docker\\Model\\ContainersIdUpdatePostBody' => 'App\\Service\\Docker\\Normalizer\\ContainersIdUpdatePostBodyNormalizer', 'App\\Service\\Docker\\Model\\ContainersIdUpdatePostResponse200' => 'App\\Service\\Docker\\Normalizer\\ContainersIdUpdatePostResponse200Normalizer', 'App\\Service\\Docker\\Model\\ContainersPrunePostResponse200' => 'App\\Service\\Docker\\Normalizer\\ContainersPrunePostResponse200Normalizer', 'App\\Service\\Docker\\Model\\BuildPrunePostResponse200' => 'App\\Service\\Docker\\Normalizer\\BuildPrunePostResponse200Normalizer', 'App\\Service\\Docker\\Model\\ImagesNameHistoryGetResponse200Item' => 'App\\Service\\Docker\\Normalizer\\ImagesNameHistoryGetResponse200ItemNormalizer', 'App\\Service\\Docker\\Model\\ImagesSearchGetResponse200Item' => 'App\\Service\\Docker\\Normalizer\\ImagesSearchGetResponse200ItemNormalizer', 'App\\Service\\Docker\\Model\\ImagesPrunePostResponse200' => 'App\\Service\\Docker\\Normalizer\\ImagesPrunePostResponse200Normalizer', 'App\\Service\\Docker\\Model\\AuthPostResponse200' => 'App\\Service\\Docker\\Normalizer\\AuthPostResponse200Normalizer', 'App\\Service\\Docker\\Model\\SystemDfGetResponse200' => 'App\\Service\\Docker\\Normalizer\\SystemDfGetResponse200Normalizer', 'App\\Service\\Docker\\Model\\ContainersIdExecPostBody' => 'App\\Service\\Docker\\Normalizer\\ContainersIdExecPostBodyNormalizer', 'App\\Service\\Docker\\Model\\ExecIdStartPostBody' => 'App\\Service\\Docker\\Normalizer\\ExecIdStartPostBodyNormalizer', 'App\\Service\\Docker\\Model\\ExecIdJsonGetResponse200' => 'App\\Service\\Docker\\Normalizer\\ExecIdJsonGetResponse200Normalizer', 'App\\Service\\Docker\\Model\\VolumesNamePutBody' => 'App\\Service\\Docker\\Normalizer\\VolumesNamePutBodyNormalizer', 'App\\Service\\Docker\\Model\\VolumesPrunePostResponse200' => 'App\\Service\\Docker\\Normalizer\\VolumesPrunePostResponse200Normalizer', 'App\\Service\\Docker\\Model\\NetworksCreatePostBody' => 'App\\Service\\Docker\\Normalizer\\NetworksCreatePostBodyNormalizer', 'App\\Service\\Docker\\Model\\NetworksCreatePostResponse201' => 'App\\Service\\Docker\\Normalizer\\NetworksCreatePostResponse201Normalizer', 'App\\Service\\Docker\\Model\\NetworksIdConnectPostBody' => 'App\\Service\\Docker\\Normalizer\\NetworksIdConnectPostBodyNormalizer', 'App\\Service\\Docker\\Model\\NetworksIdDisconnectPostBody' => 'App\\Service\\Docker\\Normalizer\\NetworksIdDisconnectPostBodyNormalizer', 'App\\Service\\Docker\\Model\\NetworksPrunePostResponse200' => 'App\\Service\\Docker\\Normalizer\\NetworksPrunePostResponse200Normalizer', 'App\\Service\\Docker\\Model\\SwarmInitPostBody' => 'App\\Service\\Docker\\Normalizer\\SwarmInitPostBodyNormalizer', 'App\\Service\\Docker\\Model\\SwarmJoinPostBody' => 'App\\Service\\Docker\\Normalizer\\SwarmJoinPostBodyNormalizer', 'App\\Service\\Docker\\Model\\SwarmUnlockkeyGetResponse200' => 'App\\Service\\Docker\\Normalizer\\SwarmUnlockkeyGetResponse200Normalizer', 'App\\Service\\Docker\\Model\\SwarmUnlockPostBody' => 'App\\Service\\Docker\\Normalizer\\SwarmUnlockPostBodyNormalizer', 'App\\Service\\Docker\\Model\\ServicesCreatePostBody' => 'App\\Service\\Docker\\Normalizer\\ServicesCreatePostBodyNormalizer', 'App\\Service\\Docker\\Model\\ServicesCreatePostResponse201' => 'App\\Service\\Docker\\Normalizer\\ServicesCreatePostResponse201Normalizer', 'App\\Service\\Docker\\Model\\ServicesIdUpdatePostBody' => 'App\\Service\\Docker\\Normalizer\\ServicesIdUpdatePostBodyNormalizer', 'App\\Service\\Docker\\Model\\SecretsCreatePostBody' => 'App\\Service\\Docker\\Normalizer\\SecretsCreatePostBodyNormalizer', 'App\\Service\\Docker\\Model\\ConfigsCreatePostBody' => 'App\\Service\\Docker\\Normalizer\\ConfigsCreatePostBodyNormalizer', '\\Jane\\Component\\JsonSchemaRuntime\\Reference' => '\\App\\Service\\Docker\\Runtime\\Normalizer\\ReferenceNormalizer'];
    protected $normalizersCache = [];

    public function supportsDenormalization($data, $type, $format = null, array $context = []): bool
    {
        return array_key_exists($type, $this->normalizers);
    }

    public function supportsNormalization($data, $format = null, array $context = []): bool
    {
        return is_object($data) && array_key_exists(get_class($data), $this->normalizers);
    }

    /**
     * @return array|string|int|float|bool|\ArrayObject|null
     */
    public function normalize($object, $format = null, array $context = [])
    {
        $normalizerClass = $this->normalizers[get_class($object)];
        $normalizer = $this->getNormalizer($normalizerClass);

        return $normalizer->normalize($object, $format, $context);
    }

    public function denormalize($data, $class, $format = null, array $context = []): mixed
    {
        $denormalizerClass = $this->normalizers[$class];
        $denormalizer = $this->getNormalizer($denormalizerClass);

        return $denormalizer->denormalize($data, $class, $format, $context);
    }

    private function getNormalizer(string $normalizerClass)
    {
        return $this->normalizersCache[$normalizerClass] ?? $this->initNormalizer($normalizerClass);
    }

    private function initNormalizer(string $normalizerClass)
    {
        $normalizer = new $normalizerClass();
        $normalizer->setNormalizer($this->normalizer);
        $normalizer->setDenormalizer($this->denormalizer);
        $this->normalizersCache[$normalizerClass] = $normalizer;

        return $normalizer;
    }

    public function getSupportedTypes(string $format = null): array
    {
        return ['App\\Service\\Docker\\Model\\Port' => false, 'App\\Service\\Docker\\Model\\MountPoint' => false, 'App\\Service\\Docker\\Model\\DeviceMapping' => false, 'App\\Service\\Docker\\Model\\DeviceRequest' => false, 'App\\Service\\Docker\\Model\\ThrottleDevice' => false, 'App\\Service\\Docker\\Model\\Mount' => false, 'App\\Service\\Docker\\Model\\MountBindOptions' => false, 'App\\Service\\Docker\\Model\\MountVolumeOptions' => false, 'App\\Service\\Docker\\Model\\MountVolumeOptionsDriverConfig' => false, 'App\\Service\\Docker\\Model\\MountTmpfsOptions' => false, 'App\\Service\\Docker\\Model\\RestartPolicy' => false, 'App\\Service\\Docker\\Model\\Resources' => false, 'App\\Service\\Docker\\Model\\ResourcesBlkioWeightDeviceItem' => false, 'App\\Service\\Docker\\Model\\ResourcesUlimitsItem' => false, 'App\\Service\\Docker\\Model\\Limit' => false, 'App\\Service\\Docker\\Model\\ResourceObject' => false, 'App\\Service\\Docker\\Model\\GenericResourcesItem' => false, 'App\\Service\\Docker\\Model\\GenericResourcesItemNamedResourceSpec' => false, 'App\\Service\\Docker\\Model\\GenericResourcesItemDiscreteResourceSpec' => false, 'App\\Service\\Docker\\Model\\HealthConfig' => false, 'App\\Service\\Docker\\Model\\Health' => false, 'App\\Service\\Docker\\Model\\HealthcheckResult' => false, 'App\\Service\\Docker\\Model\\HostConfig' => false, 'App\\Service\\Docker\\Model\\HostConfigLogConfig' => false, 'App\\Service\\Docker\\Model\\ContainerConfig' => false, 'App\\Service\\Docker\\Model\\NetworkingConfig' => false, 'App\\Service\\Docker\\Model\\NetworkSettings' => false, 'App\\Service\\Docker\\Model\\Address' => false, 'App\\Service\\Docker\\Model\\PortBinding' => false, 'App\\Service\\Docker\\Model\\GraphDriverData' => false, 'App\\Service\\Docker\\Model\\FilesystemChange' => false, 'App\\Service\\Docker\\Model\\ImageInspect' => false, 'App\\Service\\Docker\\Model\\ImageInspectRootFS' => false, 'App\\Service\\Docker\\Model\\ImageInspectMetadata' => false, 'App\\Service\\Docker\\Model\\ImageSummary' => false, 'App\\Service\\Docker\\Model\\AuthConfig' => false, 'App\\Service\\Docker\\Model\\ProcessConfig' => false, 'App\\Service\\Docker\\Model\\Volume' => false, 'App\\Service\\Docker\\Model\\VolumeUsageData' => false, 'App\\Service\\Docker\\Model\\VolumeCreateOptions' => false, 'App\\Service\\Docker\\Model\\VolumeListResponse' => false, 'App\\Service\\Docker\\Model\\Network' => false, 'App\\Service\\Docker\\Model\\IPAM' => false, 'App\\Service\\Docker\\Model\\IPAMConfig' => false, 'App\\Service\\Docker\\Model\\NetworkContainer' => false, 'App\\Service\\Docker\\Model\\BuildInfo' => false, 'App\\Service\\Docker\\Model\\BuildCache' => false, 'App\\Service\\Docker\\Model\\ImageID' => false, 'App\\Service\\Docker\\Model\\CreateImageInfo' => false, 'App\\Service\\Docker\\Model\\PushImageInfo' => false, 'App\\Service\\Docker\\Model\\ErrorDetail' => false, 'App\\Service\\Docker\\Model\\ProgressDetail' => false, 'App\\Service\\Docker\\Model\\ErrorResponse' => false, 'App\\Service\\Docker\\Model\\IdResponse' => false, 'App\\Service\\Docker\\Model\\EndpointSettings' => false, 'App\\Service\\Docker\\Model\\EndpointIPAMConfig' => false, 'App\\Service\\Docker\\Model\\PluginMount' => false, 'App\\Service\\Docker\\Model\\PluginDevice' => false, 'App\\Service\\Docker\\Model\\PluginEnv' => false, 'App\\Service\\Docker\\Model\\PluginInterfaceType' => false, 'App\\Service\\Docker\\Model\\PluginPrivilege' => false, 'App\\Service\\Docker\\Model\\Plugin' => false, 'App\\Service\\Docker\\Model\\PluginSettings' => false, 'App\\Service\\Docker\\Model\\PluginConfig' => false, 'App\\Service\\Docker\\Model\\PluginConfigInterface' => false, 'App\\Service\\Docker\\Model\\PluginConfigUser' => false, 'App\\Service\\Docker\\Model\\PluginConfigNetwork' => false, 'App\\Service\\Docker\\Model\\PluginConfigLinux' => false, 'App\\Service\\Docker\\Model\\PluginConfigArgs' => false, 'App\\Service\\Docker\\Model\\PluginConfigRootfs' => false, 'App\\Service\\Docker\\Model\\ObjectVersion' => false, 'App\\Service\\Docker\\Model\\NodeSpec' => false, 'App\\Service\\Docker\\Model\\Node' => false, 'App\\Service\\Docker\\Model\\NodeDescription' => false, 'App\\Service\\Docker\\Model\\Platform' => false, 'App\\Service\\Docker\\Model\\EngineDescription' => false, 'App\\Service\\Docker\\Model\\EngineDescriptionPluginsItem' => false, 'App\\Service\\Docker\\Model\\TLSInfo' => false, 'App\\Service\\Docker\\Model\\NodeStatus' => false, 'App\\Service\\Docker\\Model\\ManagerStatus' => false, 'App\\Service\\Docker\\Model\\SwarmSpec' => false, 'App\\Service\\Docker\\Model\\SwarmSpecOrchestration' => false, 'App\\Service\\Docker\\Model\\SwarmSpecRaft' => false, 'App\\Service\\Docker\\Model\\SwarmSpecDispatcher' => false, 'App\\Service\\Docker\\Model\\SwarmSpecCAConfig' => false, 'App\\Service\\Docker\\Model\\SwarmSpecCAConfigExternalCAsItem' => false, 'App\\Service\\Docker\\Model\\SwarmSpecEncryptionConfig' => false, 'App\\Service\\Docker\\Model\\SwarmSpecTaskDefaults' => false, 'App\\Service\\Docker\\Model\\SwarmSpecTaskDefaultsLogDriver' => false, 'App\\Service\\Docker\\Model\\ClusterInfo' => false, 'App\\Service\\Docker\\Model\\JoinTokens' => false, 'App\\Service\\Docker\\Model\\Swarm' => false, 'App\\Service\\Docker\\Model\\TaskSpec' => false, 'App\\Service\\Docker\\Model\\TaskSpecPluginSpec' => false, 'App\\Service\\Docker\\Model\\TaskSpecContainerSpec' => false, 'App\\Service\\Docker\\Model\\TaskSpecContainerSpecPrivileges' => false, 'App\\Service\\Docker\\Model\\TaskSpecContainerSpecPrivilegesCredentialSpec' => false, 'App\\Service\\Docker\\Model\\TaskSpecContainerSpecPrivilegesSELinuxContext' => false, 'App\\Service\\Docker\\Model\\TaskSpecContainerSpecDNSConfig' => false, 'App\\Service\\Docker\\Model\\TaskSpecContainerSpecSecretsItem' => false, 'App\\Service\\Docker\\Model\\TaskSpecContainerSpecSecretsItemFile' => false, 'App\\Service\\Docker\\Model\\TaskSpecContainerSpecConfigsItem' => false, 'App\\Service\\Docker\\Model\\TaskSpecContainerSpecConfigsItemFile' => false, 'App\\Service\\Docker\\Model\\TaskSpecContainerSpecUlimitsItem' => false, 'App\\Service\\Docker\\Model\\TaskSpecNetworkAttachmentSpec' => false, 'App\\Service\\Docker\\Model\\TaskSpecResources' => false, 'App\\Service\\Docker\\Model\\TaskSpecRestartPolicy' => false, 'App\\Service\\Docker\\Model\\TaskSpecPlacement' => false, 'App\\Service\\Docker\\Model\\TaskSpecPlacementPreferencesItem' => false, 'App\\Service\\Docker\\Model\\TaskSpecPlacementPreferencesItemSpread' => false, 'App\\Service\\Docker\\Model\\TaskSpecLogDriver' => false, 'App\\Service\\Docker\\Model\\Task' => false, 'App\\Service\\Docker\\Model\\TaskStatus' => false, 'App\\Service\\Docker\\Model\\TaskStatusContainerStatus' => false, 'App\\Service\\Docker\\Model\\ServiceSpec' => false, 'App\\Service\\Docker\\Model\\ServiceSpecMode' => false, 'App\\Service\\Docker\\Model\\ServiceSpecModeReplicated' => false, 'App\\Service\\Docker\\Model\\ServiceSpecModeReplicatedJob' => false, 'App\\Service\\Docker\\Model\\ServiceSpecUpdateConfig' => false, 'App\\Service\\Docker\\Model\\ServiceSpecRollbackConfig' => false, 'App\\Service\\Docker\\Model\\EndpointPortConfig' => false, 'App\\Service\\Docker\\Model\\EndpointSpec' => false, 'App\\Service\\Docker\\Model\\Service' => false, 'App\\Service\\Docker\\Model\\ServiceEndpoint' => false, 'App\\Service\\Docker\\Model\\ServiceEndpointVirtualIPsItem' => false, 'App\\Service\\Docker\\Model\\ServiceUpdateStatus' => false, 'App\\Service\\Docker\\Model\\ServiceServiceStatus' => false, 'App\\Service\\Docker\\Model\\ServiceJobStatus' => false, 'App\\Service\\Docker\\Model\\ImageDeleteResponseItem' => false, 'App\\Service\\Docker\\Model\\ServiceUpdateResponse' => false, 'App\\Service\\Docker\\Model\\ContainerSummary' => false, 'App\\Service\\Docker\\Model\\ContainerSummaryHostConfig' => false, 'App\\Service\\Docker\\Model\\ContainerSummaryNetworkSettings' => false, 'App\\Service\\Docker\\Model\\Driver' => false, 'App\\Service\\Docker\\Model\\SecretSpec' => false, 'App\\Service\\Docker\\Model\\Secret' => false, 'App\\Service\\Docker\\Model\\ConfigSpec' => false, 'App\\Service\\Docker\\Model\\Config' => false, 'App\\Service\\Docker\\Model\\ContainerState' => false, 'App\\Service\\Docker\\Model\\ContainerCreateResponse' => false, 'App\\Service\\Docker\\Model\\ContainerWaitResponse' => false, 'App\\Service\\Docker\\Model\\ContainerWaitExitError' => false, 'App\\Service\\Docker\\Model\\SystemVersion' => false, 'App\\Service\\Docker\\Model\\SystemVersionPlatform' => false, 'App\\Service\\Docker\\Model\\SystemVersionComponentsItem' => false, 'App\\Service\\Docker\\Model\\SystemInfo' => false, 'App\\Service\\Docker\\Model\\SystemInfoDefaultAddressPoolsItem' => false, 'App\\Service\\Docker\\Model\\PluginsInfo' => false, 'App\\Service\\Docker\\Model\\RegistryServiceConfig' => false, 'App\\Service\\Docker\\Model\\IndexInfo' => false, 'App\\Service\\Docker\\Model\\Runtime' => false, 'App\\Service\\Docker\\Model\\Commit' => false, 'App\\Service\\Docker\\Model\\SwarmInfo' => false, 'App\\Service\\Docker\\Model\\PeerNode' => false, 'App\\Service\\Docker\\Model\\NetworkAttachmentConfig' => false, 'App\\Service\\Docker\\Model\\EventActor' => false, 'App\\Service\\Docker\\Model\\EventMessage' => false, 'App\\Service\\Docker\\Model\\OCIDescriptor' => false, 'App\\Service\\Docker\\Model\\OCIPlatform' => false, 'App\\Service\\Docker\\Model\\DistributionInspect' => false, 'App\\Service\\Docker\\Model\\ClusterVolume' => false, 'App\\Service\\Docker\\Model\\ClusterVolumeInfo' => false, 'App\\Service\\Docker\\Model\\ClusterVolumePublishStatusItem' => false, 'App\\Service\\Docker\\Model\\ClusterVolumeSpec' => false, 'App\\Service\\Docker\\Model\\ClusterVolumeSpecAccessMode' => false, 'App\\Service\\Docker\\Model\\ClusterVolumeSpecAccessModeSecretsItem' => false, 'App\\Service\\Docker\\Model\\ClusterVolumeSpecAccessModeAccessibilityRequirements' => false, 'App\\Service\\Docker\\Model\\ClusterVolumeSpecAccessModeCapacityRange' => false, 'App\\Service\\Docker\\Model\\ContainersCreatePostBody' => false, 'App\\Service\\Docker\\Model\\ContainersIdJsonGetResponse200' => false, 'App\\Service\\Docker\\Model\\ContainersIdTopGetResponse200' => false, 'App\\Service\\Docker\\Model\\ContainersIdUpdatePostBody' => false, 'App\\Service\\Docker\\Model\\ContainersIdUpdatePostResponse200' => false, 'App\\Service\\Docker\\Model\\ContainersPrunePostResponse200' => false, 'App\\Service\\Docker\\Model\\BuildPrunePostResponse200' => false, 'App\\Service\\Docker\\Model\\ImagesNameHistoryGetResponse200Item' => false, 'App\\Service\\Docker\\Model\\ImagesSearchGetResponse200Item' => false, 'App\\Service\\Docker\\Model\\ImagesPrunePostResponse200' => false, 'App\\Service\\Docker\\Model\\AuthPostResponse200' => false, 'App\\Service\\Docker\\Model\\SystemDfGetResponse200' => false, 'App\\Service\\Docker\\Model\\ContainersIdExecPostBody' => false, 'App\\Service\\Docker\\Model\\ExecIdStartPostBody' => false, 'App\\Service\\Docker\\Model\\ExecIdJsonGetResponse200' => false, 'App\\Service\\Docker\\Model\\VolumesNamePutBody' => false, 'App\\Service\\Docker\\Model\\VolumesPrunePostResponse200' => false, 'App\\Service\\Docker\\Model\\NetworksCreatePostBody' => false, 'App\\Service\\Docker\\Model\\NetworksCreatePostResponse201' => false, 'App\\Service\\Docker\\Model\\NetworksIdConnectPostBody' => false, 'App\\Service\\Docker\\Model\\NetworksIdDisconnectPostBody' => false, 'App\\Service\\Docker\\Model\\NetworksPrunePostResponse200' => false, 'App\\Service\\Docker\\Model\\SwarmInitPostBody' => false, 'App\\Service\\Docker\\Model\\SwarmJoinPostBody' => false, 'App\\Service\\Docker\\Model\\SwarmUnlockkeyGetResponse200' => false, 'App\\Service\\Docker\\Model\\SwarmUnlockPostBody' => false, 'App\\Service\\Docker\\Model\\ServicesCreatePostBody' => false, 'App\\Service\\Docker\\Model\\ServicesCreatePostResponse201' => false, 'App\\Service\\Docker\\Model\\ServicesIdUpdatePostBody' => false, 'App\\Service\\Docker\\Model\\SecretsCreatePostBody' => false, 'App\\Service\\Docker\\Model\\ConfigsCreatePostBody' => false, '\\Jane\\Component\\JsonSchemaRuntime\\Reference' => false];
    }
}
